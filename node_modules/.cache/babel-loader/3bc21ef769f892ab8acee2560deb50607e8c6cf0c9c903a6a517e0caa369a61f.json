{"ast":null,"code":"export var randomColorGenerator=function randomColorGenerator(hex){var primary=typeof hex==\"string\"?parseInput(hex):makePrimaryColor();var secondary=makeSecondaryColor(primary);return{primary:primary,secondary:secondary};};//generate a random color for every refresh\nvar makePrimaryColor=function makePrimaryColor(){var color=\"#\"+(Math.random()*0xffffff<<0).toString(16).padStart(6,\"0\");return color;};//get a contrast color according to the background for better visibility\nexport var makeSecondaryColor=function makeSecondaryColor(primary){var r=parseInt(primary.substring(1,3),16);// hexToR\nvar g=parseInt(primary.substring(3,5),16);// hexToG\nvar b=parseInt(primary.substring(5,7),16);// hexToB\nreturn r*0.299+g*0.587+b*0.114>130?\"#000000\":\"#ffffff\";};//parse the input by the user for internal use\nvar parseInput=function parseInput(hex){return hex.length===6?\"#\"+hex:hex;};//parse the input by the user for display\nexport var parseDisplayValue=function parseDisplayValue(val){var _value;var firstLetter=val===null||val===void 0?void 0:val.charAt(0);var value;if(firstLetter===\"#\"){value=val===null||val===void 0?void 0:val.substring(1);}else if(firstLetter!==\"#\"&&(val===null||val===void 0?void 0:val.length)===7){value=val===null||val===void 0?void 0:val.slice(0,-1);}else{value=val?val:undefined;}return(_value=value)===null||_value===void 0?void 0:_value.toUpperCase();};// get random pattern from a list\nexport var randomPattern=function randomPattern(primaryColor,secondaryColor){var temp;if(secondaryColor===\"#000000\"){temp=\"#ffffff\";}else{temp=\"#000000\";}var patterns=[{name:\"linear\",pattern:\"repeating-linear-gradient(\\n        45deg,\\n        \".concat(temp,\",\\n        \").concat(temp,\" 10px,\\n        \").concat(primaryColor,\" 10px,\\n        \").concat(primaryColor,\" 20px\\n      )\")},{name:\"circle\",pattern:\"repeating-radial-gradient(\\n        circle,\\n        \".concat(temp,\",\\n        \").concat(temp,\" 10px,\\n        \").concat(primaryColor,\" 10px, \\n        \").concat(primaryColor,\" 20px\\n      )\")},{name:\"dots\",pattern:\"radial-gradient(\\n        circle,\\n        \".concat(temp,\",\\n        \").concat(temp,\" 50%,\\n        \").concat(primaryColor,\" 50%, \\n        \").concat(primaryColor,\"\\n      )\"),size:\"6px 6px\"},{name:\"dots-big\",pattern:\"radial-gradient(\\n        circle,\\n        \".concat(temp,\",\\n        \").concat(temp,\" 50%,\\n        \").concat(primaryColor,\" 50%, \\n        \").concat(primaryColor,\"\\n      )\"),size:\"20px 20px\"}];var randomPatternObject=patterns[Math.floor(Math.random()*patterns.length)];return randomPatternObject;};","map":{"version":3,"names":["randomColorGenerator","hex","primary","parseInput","makePrimaryColor","secondary","makeSecondaryColor","color","Math","random","toString","padStart","r","parseInt","substring","g","b","length","parseDisplayValue","val","firstLetter","charAt","value","slice","undefined","toUpperCase","randomPattern","primaryColor","secondaryColor","temp","patterns","name","pattern","size","randomPatternObject","floor"],"sources":["/home/runner/work/Screenbows/Screenbows/src/Utilities/UtilityFunctions.js"],"sourcesContent":["export const randomColorGenerator = (hex) => {\n  const primary = typeof hex == \"string\" ? parseInput(hex) : makePrimaryColor();\n  const secondary = makeSecondaryColor(primary);\n  return { primary, secondary };\n};\n\n//generate a random color for every refresh\nconst makePrimaryColor = () => {\n  const color =\n    \"#\" + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, \"0\");\n  return color;\n};\n\n//get a contrast color according to the background for better visibility\nexport const makeSecondaryColor = (primary) => {\n  var r = parseInt(primary.substring(1, 3), 16); // hexToR\n  var g = parseInt(primary.substring(3, 5), 16); // hexToG\n  var b = parseInt(primary.substring(5, 7), 16); // hexToB\n  return r * 0.299 + g * 0.587 + b * 0.114 > 130 ? \"#000000\" : \"#ffffff\";\n};\n\n//parse the input by the user for internal use\nconst parseInput = (hex) => {\n  return hex.length === 6 ? \"#\" + hex : hex;\n};\n\n//parse the input by the user for display\nexport const parseDisplayValue = (val) => {\n  var firstLetter = val?.charAt(0);\n  var value;\n  if (firstLetter === \"#\") {\n    value = val?.substring(1);\n  } else if (firstLetter !== \"#\" && val?.length === 7) {\n    value = val?.slice(0, -1);\n  } else {\n    value = val ? val : undefined;\n  }\n  return value?.toUpperCase();\n};\n\n// get random pattern from a list\nexport const randomPattern = (primaryColor, secondaryColor) => {\n  let temp;\n  if (secondaryColor === \"#000000\") {\n    temp = \"#ffffff\";\n  } else {\n    temp = \"#000000\";\n  }\n\n  const patterns = [\n    {\n      name: \"linear\",\n      pattern: `repeating-linear-gradient(\n        45deg,\n        ${temp},\n        ${temp} 10px,\n        ${primaryColor} 10px,\n        ${primaryColor} 20px\n      )`,\n    },\n    {\n      name: \"circle\",\n      pattern: `repeating-radial-gradient(\n        circle,\n        ${temp},\n        ${temp} 10px,\n        ${primaryColor} 10px, \n        ${primaryColor} 20px\n      )`,\n    },\n    {\n      name: \"dots\",\n      pattern: `radial-gradient(\n        circle,\n        ${temp},\n        ${temp} 50%,\n        ${primaryColor} 50%, \n        ${primaryColor}\n      )`,\n      size: `6px 6px`,\n    },\n    {\n      name: \"dots-big\",\n      pattern: `radial-gradient(\n        circle,\n        ${temp},\n        ${temp} 50%,\n        ${primaryColor} 50%, \n        ${primaryColor}\n      )`,\n      size: `20px 20px`,\n    },\n  ];\n\n  const randomPatternObject =\n    patterns[Math.floor(Math.random() * patterns.length)];\n\n  return randomPatternObject;\n};\n"],"mappings":"AAAA,MAAO,IAAMA,qBAAoB,CAAG,QAAvBA,qBAAoB,CAAIC,GAAG,CAAK,CAC3C,GAAMC,QAAO,CAAG,MAAOD,IAAG,EAAI,QAAQ,CAAGE,UAAU,CAACF,GAAG,CAAC,CAAGG,gBAAgB,EAAE,CAC7E,GAAMC,UAAS,CAAGC,kBAAkB,CAACJ,OAAO,CAAC,CAC7C,MAAO,CAAEA,OAAO,CAAPA,OAAO,CAAEG,SAAS,CAATA,SAAU,CAAC,CAC/B,CAAC,CAED;AACA,GAAMD,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAS,CAC7B,GAAMG,MAAK,CACT,GAAG,CAAG,CAAEC,IAAI,CAACC,MAAM,EAAE,CAAG,QAAQ,EAAK,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACvE,MAAOJ,MAAK,CACd,CAAC,CAED;AACA,MAAO,IAAMD,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIJ,OAAO,CAAK,CAC7C,GAAIU,EAAC,CAAGC,QAAQ,CAACX,OAAO,CAACY,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EAAE,CAAC,CAAE;AAC/C,GAAIC,EAAC,CAAGF,QAAQ,CAACX,OAAO,CAACY,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EAAE,CAAC,CAAE;AAC/C,GAAIE,EAAC,CAAGH,QAAQ,CAACX,OAAO,CAACY,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EAAE,CAAC,CAAE;AAC/C,MAAOF,EAAC,CAAG,KAAK,CAAGG,CAAC,CAAG,KAAK,CAAGC,CAAC,CAAG,KAAK,CAAG,GAAG,CAAG,SAAS,CAAG,SAAS,CACxE,CAAC,CAED;AACA,GAAMb,WAAU,CAAG,QAAbA,WAAU,CAAIF,GAAG,CAAK,CAC1B,MAAOA,IAAG,CAACgB,MAAM,GAAK,CAAC,CAAG,GAAG,CAAGhB,GAAG,CAAGA,GAAG,CAC3C,CAAC,CAED;AACA,MAAO,IAAMiB,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,GAAG,CAAK,YACxC,GAAIC,YAAW,CAAGD,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEE,MAAM,CAAC,CAAC,CAAC,CAChC,GAAIC,MAAK,CACT,GAAIF,WAAW,GAAK,GAAG,CAAE,CACvBE,KAAK,CAAGH,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEL,SAAS,CAAC,CAAC,CAAC,CAC3B,CAAC,IAAM,IAAIM,WAAW,GAAK,GAAG,EAAI,CAAAD,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEF,MAAM,IAAK,CAAC,CAAE,CACnDK,KAAK,CAAGH,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEI,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAC3B,CAAC,IAAM,CACLD,KAAK,CAAGH,GAAG,CAAGA,GAAG,CAAGK,SAAS,CAC/B,CACA,cAAOF,KAAK,iCAAL,OAAOG,WAAW,EAAE,CAC7B,CAAC,CAED;AACA,MAAO,IAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,YAAY,CAAEC,cAAc,CAAK,CAC7D,GAAIC,KAAI,CACR,GAAID,cAAc,GAAK,SAAS,CAAE,CAChCC,IAAI,CAAG,SAAS,CAClB,CAAC,IAAM,CACLA,IAAI,CAAG,SAAS,CAClB,CAEA,GAAMC,SAAQ,CAAG,CACf,CACEC,IAAI,CAAE,QAAQ,CACdC,OAAO,+DAEHH,IAAI,uBACJA,IAAI,4BACJF,YAAY,4BACZA,YAAY,kBAElB,CAAC,CACD,CACEI,IAAI,CAAE,QAAQ,CACdC,OAAO,gEAEHH,IAAI,uBACJA,IAAI,4BACJF,YAAY,6BACZA,YAAY,kBAElB,CAAC,CACD,CACEI,IAAI,CAAE,MAAM,CACZC,OAAO,sDAEHH,IAAI,uBACJA,IAAI,2BACJF,YAAY,4BACZA,YAAY,aACd,CACFM,IAAI,UACN,CAAC,CACD,CACEF,IAAI,CAAE,UAAU,CAChBC,OAAO,sDAEHH,IAAI,uBACJA,IAAI,2BACJF,YAAY,4BACZA,YAAY,aACd,CACFM,IAAI,YACN,CAAC,CACF,CAED,GAAMC,oBAAmB,CACvBJ,QAAQ,CAACtB,IAAI,CAAC2B,KAAK,CAAC3B,IAAI,CAACC,MAAM,EAAE,CAAGqB,QAAQ,CAACb,MAAM,CAAC,CAAC,CAEvD,MAAOiB,oBAAmB,CAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}